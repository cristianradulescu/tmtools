-- MySQL Script generated by MySQL Workbench
-- Mon Jan  2 18:56:30 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

-- Manually updated at: Jan 09 2017
-- Manually updated by: Cristian Radulescu

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema tmtools
-- -----------------------------------------------------
-- DROP SCHEMA IF EXISTS `tmtools` ;

-- -----------------------------------------------------
-- Schema tmtools
-- -----------------------------------------------------
-- CREATE SCHEMA IF NOT EXISTS `tmtools` DEFAULT CHARACTER SET utf8 ;
-- USE `tmtools` ;

-- -----------------------------------------------------
-- Table `employee_job_title`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `employee_job_title` ;

CREATE TABLE IF NOT EXISTS `employee_job_title` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `employee_job_title` (`name` ASC);


-- -----------------------------------------------------
-- Table `employee_team`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `employee_team` ;

CREATE TABLE IF NOT EXISTS `employee_team` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `employee_team` (`name` ASC);


-- -----------------------------------------------------
-- Table `company`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `company` ;

CREATE TABLE IF NOT EXISTS `company` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `cost_center` VARCHAR(45) NOT NULL,
  `division_manager_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_company_employee`
    FOREIGN KEY (`division_manager_id`)
    REFERENCES `employee` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `cost_center_UNIQUE` ON `company` (`cost_center` ASC);
CREATE INDEX `fk_company_employee_idx` ON `company` (`division_manager_id` ASC);


-- -----------------------------------------------------
-- Table `employee`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `employee` ;

CREATE TABLE IF NOT EXISTS `employee` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `username` VARCHAR(255) NOT NULL,
  `email_address` VARCHAR(255) NOT NULL,
  `birthday` DATE NULL,
  `personal_numeric_code` BIGINT UNSIGNED NULL,
  `identity_card_number` VARCHAR(45) NULL,
  `job_title_id` INT NULL,
  `direct_manager_id` INT NULL,
  `team_id` INT NULL,
  `company_id` INT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_employee_job_title`
    FOREIGN KEY (`job_title_id`)
    REFERENCES `employee_job_title` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_employee_employee`
    FOREIGN KEY (`direct_manager_id`)
    REFERENCES `employee` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_employee_team`
    FOREIGN KEY (`team_id`)
    REFERENCES `employee_team` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_employee_company`
    FOREIGN KEY (`company_id`)
    REFERENCES `company` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `username_UNIQUE` ON `employee` (`username` ASC);
CREATE UNIQUE INDEX `email_address_UNIQUE` ON `employee` (`email_address` ASC);
CREATE UNIQUE INDEX `personal_numeric_code_UNIQUE` ON `employee` (`personal_numeric_code` ASC);
CREATE UNIQUE INDEX `identity_card_number_UNIQUE` ON `employee` (`identity_card_number` ASC);
CREATE INDEX `fk_employee_job_title_idx` ON `employee` (`job_title_id` ASC);
CREATE INDEX `fk_employee_employee_idx` ON `employee` (`direct_manager_id` ASC);
CREATE INDEX `fk_employee_team_idx` ON `employee` (`team_id` ASC);
CREATE INDEX `fk_employee_company_idx` ON `employee` (`company_id` ASC);


-- -----------------------------------------------------
-- Table `travel_destination`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `travel_destination` ;

CREATE TABLE IF NOT EXISTS `travel_destination` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `travel_destination` (`name` ASC);


-- -----------------------------------------------------
-- Table `aquisition_supplier`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `aquisition_supplier` ;

CREATE TABLE IF NOT EXISTS `aquisition_supplier` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `aquisition_bought_service`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `aquisition_bought_service` ;

CREATE TABLE IF NOT EXISTS `aquisition_bought_service` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(225) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `aquisition_supplier_account`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `aquisition_supplier_account` ;

CREATE TABLE IF NOT EXISTS `aquisition_supplier_account` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `aquisition_supplier_id` INT NULL,
  `bank_account_number` VARCHAR(45) NULL,
  `bank_name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_aquisition_supplier_account_aquisition_supplier`
    FOREIGN KEY (`aquisition_supplier_id`)
    REFERENCES `aquisition_supplier` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `fk_aquisition_supplier_account_aquisition_supplier_idx` ON `aquisition_supplier_account` (`aquisition_supplier_id` ASC);


-- -----------------------------------------------------
-- Table `reimbursement_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `reimbursement_type` ;

CREATE TABLE IF NOT EXISTS `reimbursement_type` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `reimbursement`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `reimbursement` ;

CREATE TABLE IF NOT EXISTS `reimbursement` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `type_id` INT NOT NULL,
  `number` VARCHAR(45) NOT NULL,
  `date` DATE NOT NULL,
  `value` DECIMAL(10,2) NOT NULL,
  `employee_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_reimbursement_reimbursement_type`
    FOREIGN KEY (`type_id`)
    REFERENCES `reimbursement_type` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_reimbursement_employee`
  FOREIGN KEY (`employee_id`)
  REFERENCES `employee` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `fk_reimbursement_reinbursement_type_idx` ON `reimbursement` (`type_id` ASC);
CREATE INDEX `fk_reimbursement_employee_idx` ON `reimbursement` (`employee_id` ASC);


-- -----------------------------------------------------
-- Table `status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `status` ;

CREATE TABLE IF NOT EXISTS `status` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `reimbursement_document`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `reimbursement_document` ;

CREATE TABLE IF NOT EXISTS `reimbursement_document` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `employee_id` INT NOT NULL,
  `status_id` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_reimbursement_document_employee`
    FOREIGN KEY (`employee_id`)
    REFERENCES `employee` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_reimbursement_document_status`
    FOREIGN KEY (`status_id`)
    REFERENCES `status` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `fk_reimbursement_document_employee_idx` ON `reimbursement_document` (`employee_id` ASC);
CREATE INDEX `fk_reimbursement_document_status_idx` ON `reimbursement_document` (`status_id` ASC);


-- -----------------------------------------------------
-- Table `travel_purpose`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `travel_purpose` ;

CREATE TABLE IF NOT EXISTS `travel_purpose` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `travel_purpose` (`name` ASC);


-- -----------------------------------------------------
-- Table `travel_document`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `travel_document` ;

CREATE TABLE IF NOT EXISTS `travel_document` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `employee_id` INT NOT NULL,
  `purpose_id` INT NOT NULL,
  `destination_id` INT NOT NULL,
  `date_start` DATE NOT NULL,
  `date_end` DATE NOT NULL,
  `departure_leave_time` DATETIME NOT NULL,
  `departure_arrival_time` DATETIME NOT NULL,
  `destination_arrival_time` DATETIME NOT NULL,
  `destination_leave_time` DATETIME NOT NULL,
  `status_id` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_travel_document_employee`
    FOREIGN KEY (`employee_id`)
    REFERENCES `employee` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_travel_document_travel_purpose`
    FOREIGN KEY (`purpose_id`)
    REFERENCES `travel_purpose` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_travel_document_travel_destination`
    FOREIGN KEY (`destination_id`)
    REFERENCES `travel_destination` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_travel_document_status`
    FOREIGN KEY (`status_id`)
    REFERENCES `status` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `fk_travel_document_employee_idx` ON `travel_document` (`employee_id` ASC);
CREATE INDEX `fk_travel_document_travel_purpose_idx` ON `travel_document` (`purpose_id` ASC);
CREATE INDEX `fk_travel_document_travel_destination_idx` ON `travel_document` (`destination_id` ASC);
CREATE INDEX `fk_travel_document_status_idx` ON `travel_document` (`status_id` ASC);


-- -----------------------------------------------------
-- Table `reimbursement_document_reimbursements`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `reimbursement_document_reimbursements` ;

CREATE TABLE IF NOT EXISTS `reimbursement_document_reimbursements` (
  `reimbursement_document_id` INT NOT NULL,
  `reimbursement_id` INT NOT NULL,
  PRIMARY KEY (`reimbursement_document_id`, `reimbursement_id`),
  CONSTRAINT `fk_reimbursement_document`
    FOREIGN KEY (`reimbursement_document_id`)
    REFERENCES `reimbursement_document` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_reimbursement`
    FOREIGN KEY (`reimbursement_id`)
    REFERENCES `reimbursement` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `fk_reimbursement_idx` ON `reimbursement_document_reimbursements` (`reimbursement_id` ASC);


-- -----------------------------------------------------
-- Table `fos_user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fos_user` ;

CREATE TABLE `fos_user` (
  id INT AUTO_INCREMENT NOT NULL,
  username VARCHAR(180) NOT NULL,
  username_canonical VARCHAR(180) NOT NULL,
  email VARCHAR(180) NOT NULL,
  email_canonical VARCHAR(180) NOT NULL,
  enabled TINYINT(1) NOT NULL,
  salt VARCHAR(255) DEFAULT NULL,
  PASSWORD VARCHAR(255) NOT NULL,
  last_login DATETIME DEFAULT NULL,
  confirmation_token VARCHAR(180) DEFAULT NULL,
  password_requested_at DATETIME DEFAULT NULL,
  roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)',
  UNIQUE INDEX UNIQ_957A647992FC23A8 (username_canonical),
  UNIQUE INDEX UNIQ_957A6479A0D96FBF (email_canonical),
  UNIQUE INDEX UNIQ_957A6479C05FB297 (confirmation_token),
  PRIMARY KEY(id))
  DEFAULT CHARACTER SET utf8
  COLLATE utf8_unicode_ci
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Data for table `employee_job_title`
-- -----------------------------------------------------
START TRANSACTION;
USE `tmtools`;
INSERT INTO `employee_job_title` (`id`, `name`) VALUES (DEFAULT, 'Manager');
INSERT INTO `employee_job_title` (`id`, `name`) VALUES (DEFAULT, 'Programator');

COMMIT;


-- -----------------------------------------------------
-- Data for table `employee_team`
-- -----------------------------------------------------
START TRANSACTION;
USE `tmtools`;
INSERT INTO `employee_team` (`id`, `name`) VALUES (DEFAULT, 'Craiova HUB');

COMMIT;


-- -----------------------------------------------------
-- Data for table `company`
-- -----------------------------------------------------
START TRANSACTION;
USE `tmtools`;
INSERT INTO `company` (`id`, `name`, `cost_center`, `division_manager_id`) VALUES (DEFAULT, 'eMAG', '12RO123456', 1);
INSERT INTO `company` (`id`, `name`, `cost_center`, `division_manager_id`) VALUES (DEFAULT, 'Dante', '13RO123456', 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `employee`
-- -----------------------------------------------------
START TRANSACTION;
USE `tmtools`;
INSERT INTO `employee` (`id`, `first_name`, `last_name`, `username`, `email_address`, `birthday`, `personal_numeric_code`, `identity_card_number`, `job_title_id`, `direct_manager_id`, `team_id`, `company_id`) VALUES (DEFAULT, 'Cristian', 'Radulescu', 'cristian.radulescu', 'cristian.radulescu', '1984-01-01', 1234567890000, 'AB123456', 1, NULL, 1, NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `travel_destination`
-- -----------------------------------------------------
START TRANSACTION;
USE `tmtools`;
INSERT INTO `travel_destination` (`id`, `name`) VALUES (DEFAULT, 'Bucuresti');
INSERT INTO `travel_destination` (`id`, `name`) VALUES (DEFAULT, 'Craiova');

COMMIT;


-- -----------------------------------------------------
-- Data for table `travel_purpose`
-- -----------------------------------------------------
START TRANSACTION;
USE `tmtools`;
INSERT INTO `travel_purpose` (`id`, `name`) VALUES (DEFAULT, 'Sedinta planificare');
INSERT INTO `travel_purpose` (`id`, `name`) VALUES (DEFAULT, 'Eveniment companie');
INSERT INTO `travel_purpose` (`id`, `name`) VALUES (DEFAULT, 'Curs');
INSERT INTO `travel_purpose` (`id`, `name`) VALUES (DEFAULT, 'Prezentare');

COMMIT;


-- -----------------------------------------------------
-- Data for table `reimbursement_type`
-- -----------------------------------------------------
START TRANSACTION;
USE `tmtools`;
INSERT INTO `reimbursement_type` (`id`, `name`) VALUES (DEFAULT, 'Bon combustibil');
INSERT INTO `reimbursement_type` (`id`, `name`) VALUES (DEFAULT, 'Bon taxi');
INSERT INTO `reimbursement_type` (`id`, `name`) VALUES (DEFAULT, 'Bilet tren');
INSERT INTO `reimbursement_type` (`id`, `name`) VALUES (DEFAULT, 'Factura');

COMMIT;


-- -----------------------------------------------------
-- Data for table `status`
-- -----------------------------------------------------
START TRANSACTION;
USE `tmtools`;
INSERT INTO `status` (`id`, `name`) VALUES (1, 'New');
INSERT INTO `status` (`id`, `name`) VALUES (2, 'Pending');
INSERT INTO `status` (`id`, `name`) VALUES (3, 'Completed');

COMMIT;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
