-- MySQL Script generated by MySQL Workbench
-- Fri Nov 11 21:20:17 2016
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema tmtools
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `tmtools` ;

-- -----------------------------------------------------
-- Schema tmtools
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `tmtools` DEFAULT CHARACTER SET utf8 ;
USE `tmtools` ;

-- -----------------------------------------------------
-- Table `tmtools`.`employee_job_title`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tmtools`.`employee_job_title` ;

CREATE TABLE IF NOT EXISTS `tmtools`.`employee_job_title` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `tmtools`.`employee_job_title` (`name` ASC);


-- -----------------------------------------------------
-- Table `tmtools`.`employee_team`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tmtools`.`employee_team` ;

CREATE TABLE IF NOT EXISTS `tmtools`.`employee_team` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `tmtools`.`employee_team` (`name` ASC);


-- -----------------------------------------------------
-- Table `tmtools`.`company`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tmtools`.`company` ;

CREATE TABLE IF NOT EXISTS `tmtools`.`company` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `cost_center` VARCHAR(45) NOT NULL,
  `division_manager_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_company_employee`
    FOREIGN KEY (`division_manager_id`)
    REFERENCES `tmtools`.`employee` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `cost_center_UNIQUE` ON `tmtools`.`company` (`cost_center` ASC);

CREATE INDEX `fk_company_employee_idx` ON `tmtools`.`company` (`division_manager_id` ASC);


-- -----------------------------------------------------
-- Table `tmtools`.`employee`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tmtools`.`employee` ;

CREATE TABLE IF NOT EXISTS `tmtools`.`employee` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `username` VARCHAR(255) NOT NULL,
  `email_address` VARCHAR(255) NOT NULL,
  `birthday` DATE NULL,
  `personal_numeric_code` BIGINT UNSIGNED NULL,
  `identity_card_number` VARCHAR(45) NULL,
  `job_title_id` INT NULL,
  `direct_manager_id` INT NULL,
  `team_id` INT NULL,
  `company_id` INT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_employee_job_title`
    FOREIGN KEY (`job_title_id`)
    REFERENCES `tmtools`.`employee_job_title` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_employee_employee`
    FOREIGN KEY (`direct_manager_id`)
    REFERENCES `tmtools`.`employee` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_employee_team`
    FOREIGN KEY (`team_id`)
    REFERENCES `tmtools`.`employee_team` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_employee_company`
    FOREIGN KEY (`company_id`)
    REFERENCES `tmtools`.`company` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `username_UNIQUE` ON `tmtools`.`employee` (`username` ASC);

CREATE UNIQUE INDEX `email_address_UNIQUE` ON `tmtools`.`employee` (`email_address` ASC);

CREATE UNIQUE INDEX `personal_numeric_code_UNIQUE` ON `tmtools`.`employee` (`personal_numeric_code` ASC);

CREATE UNIQUE INDEX `identity_card_number_UNIQUE` ON `tmtools`.`employee` (`identity_card_number` ASC);

CREATE INDEX `fk_employee_job_title_idx` ON `tmtools`.`employee` (`job_title_id` ASC);

CREATE INDEX `fk_employee_employee_idx` ON `tmtools`.`employee` (`direct_manager_id` ASC);

CREATE INDEX `fk_employee_team_idx` ON `tmtools`.`employee` (`team_id` ASC);

CREATE INDEX `fk_employee_company_idx` ON `tmtools`.`employee` (`company_id` ASC);


-- -----------------------------------------------------
-- Table `tmtools`.`travel_destination`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tmtools`.`travel_destination` ;

CREATE TABLE IF NOT EXISTS `tmtools`.`travel_destination` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `tmtools`.`travel_destination` (`name` ASC);


-- -----------------------------------------------------
-- Table `tmtools`.`aquisition_supplier`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tmtools`.`aquisition_supplier` ;

CREATE TABLE IF NOT EXISTS `tmtools`.`aquisition_supplier` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tmtools`.`aquisition_bought_service`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tmtools`.`aquisition_bought_service` ;

CREATE TABLE IF NOT EXISTS `tmtools`.`aquisition_bought_service` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(225) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tmtools`.`aquisition_supplier_account`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tmtools`.`aquisition_supplier_account` ;

CREATE TABLE IF NOT EXISTS `tmtools`.`aquisition_supplier_account` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `aquisition_supplier_id` INT NULL,
  `bank_account_number` VARCHAR(45) NULL,
  `bank_name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_aquisition_supplier_account_aquisition_supplier`
    FOREIGN KEY (`aquisition_supplier_id`)
    REFERENCES `tmtools`.`aquisition_supplier` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `fk_aquisition_supplier_account_aquisition_supplier_idx` ON `tmtools`.`aquisition_supplier_account` (`aquisition_supplier_id` ASC);


-- -----------------------------------------------------
-- Table `tmtools`.`reinbursement_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tmtools`.`reinbursement_type` ;

CREATE TABLE IF NOT EXISTS `tmtools`.`reinbursement_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tmtools`.`reinbursement`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tmtools`.`reinbursement` ;

CREATE TABLE IF NOT EXISTS `tmtools`.`reinbursement` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `type_id` INT NOT NULL,
  `value` FLOAT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_reinbursement_reinbursement_type`
    FOREIGN KEY (`type_id`)
    REFERENCES `tmtools`.`reinbursement_type` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `fk_reinbursement_reinbursement_type_idx` ON `tmtools`.`reinbursement` (`type_id` ASC);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `tmtools`.`employee_job_title`
-- -----------------------------------------------------
START TRANSACTION;
USE `tmtools`;
INSERT INTO `tmtools`.`employee_job_title` (`id`, `name`) VALUES (DEFAULT, 'Manager');
INSERT INTO `tmtools`.`employee_job_title` (`id`, `name`) VALUES (DEFAULT, 'Programator');

COMMIT;


-- -----------------------------------------------------
-- Data for table `tmtools`.`employee_team`
-- -----------------------------------------------------
START TRANSACTION;
USE `tmtools`;
INSERT INTO `tmtools`.`employee_team` (`id`, `name`) VALUES (DEFAULT, 'Craiova HUB');

COMMIT;


-- -----------------------------------------------------
-- Data for table `tmtools`.`employee`
-- -----------------------------------------------------
START TRANSACTION;
USE `tmtools`;
INSERT INTO `tmtools`.`employee` (`id`, `first_name`, `last_name`, `username`, `email_address`, `birthday`, `personal_numeric_code`, `identity_card_number`, `job_title_id`, `direct_manager_id`, `team_id`, `company_id`) VALUES (DEFAULT, 'Cristian', 'Radulescu', 'cristian.radulescu', 'cristian.radulescu', '1984-01-01', 1234567890000, 'AB123456', 1, NULL, 1, NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `tmtools`.`company`
-- -----------------------------------------------------
START TRANSACTION;
USE `tmtools`;
INSERT INTO `tmtools`.`company` (`id`, `name`, `cost_center`, `division_manager_id`) VALUES (DEFAULT, 'eMAG', '12RO123456', 1);
INSERT INTO `tmtools`.`company` (`id`, `name`, `cost_center`, `division_manager_id`) VALUES (DEFAULT, 'Dante', '13RO123456', 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `tmtools`.`travel_destination`
-- -----------------------------------------------------
START TRANSACTION;
USE `tmtools`;
INSERT INTO `tmtools`.`travel_destination` (`id`, `name`) VALUES (DEFAULT, 'Bucuresti');
INSERT INTO `tmtools`.`travel_destination` (`id`, `name`) VALUES (DEFAULT, 'Craiova');

COMMIT;

